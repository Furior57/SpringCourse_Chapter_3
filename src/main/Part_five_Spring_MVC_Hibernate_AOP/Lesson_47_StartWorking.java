public class Lesson_47_StartWorking {
    // Мы получили знания о Spring, Hibernate, AOP, MVC, настало время объединить эти знания
    // в одном приложении.

    // Для начала мы напишем view который будет выводить список всех работников на экран.
    // Для этого мы напишем контроллер, который будет вызываться по адресу "/" и перенаправлять
    // нас на страницу /showAllEmployees. Для того чтобы выводить всех работников на экран
    // нам понадобится база данных. Доступ к ней мы будем получать через Hibernate с помощью
    // DAO. DAO расшифровывается как Data Access Object, это специальный класс который будет
    // обрабатывать информацию из таблиц.
    // Контроллер будет обращаться к DAO который будет связываться с базой через Hibernate и возвращать
    // информацию из таблицы контроллеру. Далее контроллер передает эту информацию в model
    // который мы будем использовать для отображения данных во view.
    // Начальное приложение будет выглядеть именно так, потом мы его несколько видоизменим.

    // Первое, что мы сделаем, это создадим в пакете entity класс Employee, пометим его как @Entity,
    // а так же аннотацией @Table(name="employees") укажем к какой именно таблице в нашей базе данных
    // принадлежит данный класс.

    // Теперь нам необходимо создать DAO, для этого в одноименном пакете создаем интерфейс EmployeeDAO.
    // В этом интерфейсе мы определим абстрактный метод который будет возвращать список с работниками.
    // После этого создаем класс EmployeeDAOimpl который будет имплементировать данный интерфейс.
    // Почему мы просто не создали класс? Потому, что это шаблон разработки, DAO объекты могут работать
    // с разной логикой, поэтому для удобства лучше иметь интерфейс. Классы работающие с такими
    // интерфейсами обычно повторяют название интерфейса, но в конце добавляется impl, чтобы показать,
    // что это имплементация. Перейдем в этот класс.
}
